apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{ .Values.service.amqpPort }}
            - containerPort: {{ .Values.service.managementPort }}
            - containerPort: {{ .Values.service.stompPort }}
          env:
            - name: RABBITMQ_DEFAULT_VHOST
              value: "{{ .Values.rabbitmq.defaultVHost }}"
            - name: RABBITMQ_DEFAULT_USER
              value: "{{ .Values.rabbitmq.defaultUser }}"
            - name: RABBITMQ_DEFAULT_PASS
              value: "{{ .Values.rabbitmq.defaultPass }}"
            - name: RABBITMQ_LOAD_DEFINITIONS
              value: "{{ .Values.rabbitmq.loadDefinitions }}"
          resources:
            requests:
              cpu: "{{ .Values.resources.requests.cpu }}"
              memory: "{{ .Values.resources.requests.memory }}"
            limits:
              cpu: "{{ .Values.resources.limits.cpu }}"
              memory: "{{ .Values.resources.limits.memory }}"
          livenessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "check_port_connectivity"]
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          volumeMounts:
            {{- range .Values.volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
            {{- end }}
            - name: config
              mountPath: /etc/rabbitmq/rabbitmq.conf
              subPath: rabbitmq.conf
            - name: plugins
              mountPath: /etc/rabbitmq/enabled_plugins
              subPath: enabled_plugins
            - name: definitions
              mountPath: /etc/rabbitmq/definitions.json
              subPath: definitions.json

      volumes:
        - name: shared-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.claimName | default "rabbitmq-pvc-claim" }}
        - name: config
          configMap:
            name: {{ .Release.Name }}-config
            items:
            - key: rabbitmq.conf
              path: rabbitmq.conf
        - name: plugins
          configMap:
            name: {{ .Release.Name }}-plugins-config
            items:
            - key: enabled-plugins
              path: enabled_plugins
        - name: definitions
          configMap:
            name: {{ .Release.Name }}-definitions-config
            items:
            - key: definitions.json
              path: definitions.json